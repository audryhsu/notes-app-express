{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportanceOf","label","important","content","onClick","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","err","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAWeA,EATF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,mBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAsCC,QCM7BI,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAGP,qBAAKC,UAAU,QAAf,SACGD,K,gBCPDE,EAAU,oDAkBD,EAhBA,WAEb,OADeC,IAAMC,IAAIF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAVA,SAAAC,GAEb,OADeL,IAAMM,KAAKP,EAASM,GACpBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADeL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC9BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCVrCK,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,8EAkFSC,EA9EH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,gBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IACGvB,MAAK,SAAAwB,GACJT,EAASS,QAEZ,IAGH,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAtC,GAAI,OAAuB,IAAnBA,EAAKG,aAmChE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAASyB,IACvB,8BACE,yBAAQ3B,QAAS,kBAAK0B,GAAYD,IAAlC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAAvC,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,mBAAoB,kBAhCH,SAACgB,GAC1B,IAAMjB,EAAO0B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAMA,KAC/ByB,EAAW,2BAAO1C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CgC,EAAmBlB,EAAIyB,GACtB9B,MAAK,SAAA+B,GACJhB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAGA,EAAKiB,KAAOA,EAAKjB,EAAO2C,SAEnDC,OAAM,SAAAC,GACLZ,EAAgB,kBAAD,OACNjC,EAAKI,QADC,sCAEb0C,YAAW,WACTb,EAAgB,QACf,KACLN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAGA,EAAExB,KAAOA,SAkBHhB,CAAmBD,EAAKiB,MAF7CjB,EAAKiB,SAMhB,uBAAM8B,SAnDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASwB,EACTuB,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,IAE7BpB,EACUe,GACPtC,MAAK,SAAA+B,GACJhB,EAASD,EAAM8B,OAAOb,OAE1Bd,EAAW,KAuCT,UACE,uBACE4B,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO9B,EAAW8B,EAAEC,OAAOH,UACzC,uBAAOI,KAAK,SAASJ,MAAM,YAE7B,cAAC,EAAD,Q,MCxFJK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b85c1de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportanceOf}) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportanceOf}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\nexport default Note\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = 'https://gentle-lake-05299.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request= axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n  const request= axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request= axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport axios from 'axios'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br/>\r\n      <em>Note app, Department of Computer Science</em>\r\n    </div>\r\n  )\r\n}\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note..')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService.getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      });\r\n  }, [])\r\n\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n      })\r\n    setNewNote('') // reset controlled component\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id ===id)\r\n    const changedNote = {...note, important: !note.important }\r\n\r\n    noteService.update(id, changedNote)\r\n    .then(returnedNote => {\r\n      setNotes(notes.map(note=> note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(err => {\r\n      setErrorMessage(`\r\n        Note ${note.content} was already removed from server!`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000);\r\n      setNotes(notes.filter(n=> n.id !== id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={()=> setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportanceOf={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={(e) => setNewNote(e.target.value)} />\r\n      <input type=\"submit\" value=\"Save\"/>\r\n      </form>\r\n    <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}